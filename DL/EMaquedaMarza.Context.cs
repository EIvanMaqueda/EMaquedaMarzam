//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EMaquedaMarzaEntities : DbContext
    {
        public EMaquedaMarzaEntities()
            : base("name=EMaquedaMarzaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DetallePedido> DetallePedidoes { get; set; }
        public virtual DbSet<Medicamento> Medicamentoes { get; set; }
        public virtual DbSet<Pedido> Pedidoes { get; set; }
        public virtual DbSet<Usuario> Usuarios { get; set; }
    
        public virtual int DetallePedidoAdd(Nullable<int> idPedido, Nullable<int> idUsuario, Nullable<int> idMedicamento, Nullable<int> cantidad, Nullable<decimal> subtotal)
        {
            var idPedidoParameter = idPedido.HasValue ?
                new ObjectParameter("idPedido", idPedido) :
                new ObjectParameter("idPedido", typeof(int));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            var idMedicamentoParameter = idMedicamento.HasValue ?
                new ObjectParameter("IdMedicamento", idMedicamento) :
                new ObjectParameter("IdMedicamento", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var subtotalParameter = subtotal.HasValue ?
                new ObjectParameter("subtotal", subtotal) :
                new ObjectParameter("subtotal", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DetallePedidoAdd", idPedidoParameter, idUsuarioParameter, idMedicamentoParameter, cantidadParameter, subtotalParameter);
        }
    
        public virtual int MediacamentoDelete(Nullable<int> idMedicamento)
        {
            var idMedicamentoParameter = idMedicamento.HasValue ?
                new ObjectParameter("idMedicamento", idMedicamento) :
                new ObjectParameter("idMedicamento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MediacamentoDelete", idMedicamentoParameter);
        }
    
        public virtual int MedicamentoAdd(string nombre, Nullable<decimal> precio, string imagen, string descripcion)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(decimal));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MedicamentoAdd", nombreParameter, precioParameter, imagenParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<MedicamentoGetAll_Result> MedicamentoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MedicamentoGetAll_Result>("MedicamentoGetAll");
        }
    
        public virtual ObjectResult<MedicamentoGetById_Result> MedicamentoGetById(Nullable<int> idMedicamento)
        {
            var idMedicamentoParameter = idMedicamento.HasValue ?
                new ObjectParameter("idMedicamento", idMedicamento) :
                new ObjectParameter("idMedicamento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MedicamentoGetById_Result>("MedicamentoGetById", idMedicamentoParameter);
        }
    
        public virtual int MedicamentoUpdate(string nombre, Nullable<decimal> precio, string imagen, string descripcion, Nullable<int> idMedicamento)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(decimal));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var idMedicamentoParameter = idMedicamento.HasValue ?
                new ObjectParameter("idMedicamento", idMedicamento) :
                new ObjectParameter("idMedicamento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MedicamentoUpdate", nombreParameter, precioParameter, imagenParameter, descripcionParameter, idMedicamentoParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> PedidoAdd()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("PedidoAdd");
        }
    
        public virtual int UsuarioAdd(string password, string nombre, string apellidopaterno, string apellidoMaterno)
        {
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidopaternoParameter = apellidopaterno != null ?
                new ObjectParameter("apellidopaterno", apellidopaterno) :
                new ObjectParameter("apellidopaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("apellidoMaterno", apellidoMaterno) :
                new ObjectParameter("apellidoMaterno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UsuarioAdd", passwordParameter, nombreParameter, apellidopaternoParameter, apellidoMaternoParameter);
        }
    
        public virtual ObjectResult<Login_Result> Login(string nombre, string password)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Login_Result>("Login", nombreParameter, passwordParameter);
        }
    }
}
